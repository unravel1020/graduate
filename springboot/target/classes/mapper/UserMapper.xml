<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.springboot.mapper.UserMapper">

    <select id="getUser" resultType="org.example.springboot.entity.User">
        select * from `user`
        WHERE student_id = #{studentId}
    </select>

    <select id="login" resultType="org.example.springboot.entity.User">
        select * from `user`
        WHERE student_id = #{studentId} AND password = #{password}
    </select>

<!--    selectByStudentId-->
    <select id="selectByStudentId" resultType="org.example.springboot.entity.User">
        select * from `user` where student_id = #{studentId}
    </select>

    <select id="findByStudentId" resultType="org.example.springboot.entity.User">
        SELECT * FROM user WHERE student_id = #{studentId}
    </select>
    <select id="getAvatarUrlByStudentId" resultType="java.lang.String">
        select avatar from user where student_id = #{studentId}
    </select>

    <update id="updateAvatar" parameterType="org.example.springboot.entity.User">
        UPDATE user SET avatar = #{avatar} WHERE student_id = #{studentId}
    </update>

    <update id="updateUser" parameterType="org.example.springboot.entity.User">
        UPDATE user SET name = #{name},major = #{major},college = #{college},phone = #{phone},email = #{email} WHERE student_id = #{studentId}
    </update>

    <update id="updatePassword">
        UPDATE user SET password = #{newPassword} WHERE student_id = #{studentId}
    </update>

    <select id="findByUsername" resultType="org.example.springboot.entity.User">
        SELECT * FROM user WHERE username = #{username}
    </select>
    
    <insert id="insert" parameterType="org.example.springboot.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, real_name, email, phone, student_id, role, status, create_time, update_time)
        VALUES (#{username}, #{password}, #{realName}, #{email}, #{phone}, #{studentId}, #{role}, #{status}, NOW(), NOW())
    </insert>
    
    <update id="update" parameterType="org.example.springboot.entity.User">
        UPDATE user
        SET password = #{password},
            real_name = #{realName},
            email = #{email},
            phone = #{phone},
            student_id = #{studentId},
            role = #{role},
            status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <select id="findAll" resultType="org.example.springboot.entity.User">
        SELECT * FROM user
    </select>

    <select id="findById" resultType="org.example.springboot.entity.User">
        SELECT * FROM user WHERE id = #{id}
    </select>

    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <select id="findByRole" resultType="org.example.springboot.entity.User">
        SELECT * FROM user WHERE role = #{role}
        ORDER BY create_time DESC
    </select>

</mapper>